{"version":3,"sources":["components/Preloader/Preloader.module.css","components/registred/Registred.module.css","components/common/Input/Input.module.css","components/common/checkbox/Checkbox.module.css","components/common/button/Button.module.css","components/404/404.module.css","components/header/Header.module.css","components/404/cat404.png","components/404/Error404.tsx","components/common/Input/Input.tsx","components/common/checkbox/Checkbox.tsx","components/common/button/Button.tsx","api/api.tsx","components/login/Login.tsx","components/PasswordRecovery.tsx","components/Profile.tsx","components/EnteringNewPassword.tsx","components/Testing.tsx","bll/registredReduser.ts","components/Preloader/Preloader.tsx","components/registred/Registred.tsx","bll/forgotReduser.ts","components/forgot/Forgot.tsx","components/routes/Routes..tsx","components/header/Header.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx"],"names":["module","exports","Error404","className","s","content","src","pages404","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","instance","axios","create","baseURL","withCredentials","API","payload","post","email","password","from","message","Login","useState","setEmail","setPassword","setChecked","placeholder","onClick","then","res","console","log","PasswordRecovery","Profile","EnteringNewPassword","token","useParams","path","render","match","Testing","blue","initState","isRegistred","isFetching","toggleIsFetching","Preloader","loading","loading_text","loading_text_words","Registred","confirmPassword","setConfirmPassword","errorEmailMessage","setErrorEmailMessage","errorPasswordMessage","setErrorPasswordMessage","dispatch","useDispatch","useSelector","state","register","onSubmitForm","useCallback","catch","err","response","data","setError","checkInThunk","to","container","form","onBlur","test","length","btn_wrap","cancel_btn","register_btn","Forgot","loginValue","setLoginValue","emailValue","setEmailValue","PATH","Routes","exact","Header","activeMenu","setActiveMenu","menuWrapper","burgerMenu","containerMenuLinks","link","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","forgot","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c0f62d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Preloader_loading__3VHTA\",\"loading_text\":\"Preloader_loading_text__3gSeS\",\"blur-text\":\"Preloader_blur-text__3LMkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Registred_container__QRrm2\",\"form\":\"Registred_form__2lhVl\",\"btn_wrap\":\"Registred_btn_wrap__xQEYv\",\"cancel_btn\":\"Registred_cancel_btn__3pLid\",\"register_btn\":\"Registred_register_btn__2tIWR\",\"error\":\"Registred_error__1sIRs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__3Dv7_\",\"errorInput\":\"Input_errorInput__3b_mW\",\"error\":\"Input_error__VpK1_\",\"input\":\"Input_input__3qVm_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__2IX8E\",\"spanClassName\":\"Checkbox_spanClassName__2PGdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2dlJv\",\"red\":\"Button_red__2WPVt\",\"button\":\"Button_button__1eCoJ\",\"blink\":\"Button_blink__1t9Ok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"404_content__1PmPX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__2Vmwu\",\"header\":\"Header_header__1Xwyi\",\"blue\":\"Header_blue__2u6ZM\",\"menuWrapper\":\"Header_menuWrapper__29xMj\",\"burgerMenu\":\"Header_burgerMenu__3nzj-\",\"containerMenuLinks\":\"Header_containerMenuLinks__2tkqZ\",\"activeMenu\":\"Header_activeMenu__iqZdg\",\"menuLinks\":\"Header_menuLinks__2vQzs\",\"active\":\"Header_active__AS62N\"};","export default __webpack_public_path__ + \"static/media/cat404.8fcdbb21.png\";","import React from 'react'\nimport pages404 from './cat404.png'\nimport s from './404.module.css'\n\nfunction Error404() {\n    return (\n         <div className={s.content}>\n             <div>404</div>\n             <div>Page not found!</div>\n             <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n             <img src={pages404}/>\n\n        </div>\n    )\n}\n\nexport default Error404","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './Input.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput: s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './Checkbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './Button.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:7542/2.0/\",\r\n  withCredentials: true,\r\n});\r\nconst message = `<div style=\"background-color: lime; padding: 15px\">\t\r\n\tpassword recovery link: \r\n\t<a href='http://localhost:3000/#/set-new-password/$token$'>\r\n\tlink</a></div>`\r\n// api\r\nexport const API = {\r\n  createLogin(payload: any) {\r\n    const promise = instance.post<any>(\"auth/login\", payload);\r\n    return promise;\r\n  },\r\n\r\n  checkIn(email: string, password: string) {\r\n    return instance.post(\"auth/register\", { email, password });\r\n  },\r\n  forgot(email: string, from: string) {\r\n    return instance.post(\"auth/forgot\",  {email, from, message} );\r\n  },\r\n  setNewPassword(password:string, \tresetPasswordToken: string\t) {\r\n    return instance.post(\"auth/set-new-password\",  {password,resetPasswordToken} );\r\n  },\r\n};\r\n\r\n","import React, {useState} from \"react\";\r\nimport SuperInputText from \"../common/Input/Input\";\r\nimport SuperCheckbox from \"../common/checkbox/Checkbox\";\r\nimport SuperButton from \"../common/button/Button\";\r\nimport {API} from \"../../api/api\";\r\n\r\nfunction Login() {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [checked, setChecked] = useState(false)\r\n\r\n    const onClickHandler=()=>{\r\n        API.createLogin({email, password, checked})\r\n            .then(res=>{\r\n                console.log(res)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <SuperInputText value={email} placeholder={\"email\"} onChangeText={setEmail}/>\r\n            <SuperInputText value={password} placeholder={\"password\"} onChangeText={setPassword}/>\r\n            <SuperCheckbox checked={checked} onChangeChecked={setChecked}/>\r\n            <SuperButton onClick={onClickHandler}>Sign in</SuperButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\n\nfunction PasswordRecovery() {\n    return (\n        <div>\n            PasswordRecovery\n        </div>\n    );\n}\n\nexport default PasswordRecovery;\n","import React, {useState} from \"react\";\nimport SuperInputText from \"./common/Input/Input\";\nimport s from './header/Header.module.css'\nimport SuperCheckbox from \"./common/checkbox/Checkbox\";\nimport SuperButton from \"./common/button/Button\";\n\n\n\nfunction Profile() {\n    const [checked, setChecked] = useState<boolean>(false)\n    return (\n        <div>\n            Profile\n        </div>\n\n    );\n}\n\nexport default Profile;\n","import React from \"react\";\r\nimport {Route, useParams} from \"react-router-dom\";\r\n\r\nfunction EnteringNewPassword() {\r\n\r\n    let { token } = useParams<{token: string}>();\r\n    console.log(token);\r\n    return (\r\n        <Route\r\n            path=\"/entering-new-password/:token\"\r\n            render={({ match }) => {\r\n                // Do whatever you want with the match...\r\n                return <div />;\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default EnteringNewPassword;\r\n","import React, {useState} from \"react\";\nimport SuperInputText from \"./common/Input/Input\";\nimport s from './header/Header.module.css'\nimport SuperCheckbox from \"./common/checkbox/Checkbox\";\nimport SuperButton from \"./common/button/Button\";\n\n\n\nfunction Testing() {\n    const [checked, setChecked] = useState<boolean>(false)\n    return (\n        <div>\n            <SuperInputText\n                className={s.blue}\n            />\n            <div>\n                <SuperCheckbox   checked={checked}\n                                 onChangeChecked={setChecked}/>\n            </div>\n            <div>\n                <SuperButton>\n                   click\n                </SuperButton>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Testing;\n","import { Dispatch } from \"redux\";\r\nimport { API } from \"../api/api\";\r\n\r\nconst initState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  isRegistred: false,\r\n  error: null as null | string,\r\n  isFetching: false,\r\n};\r\n\r\nexport const registredReducer = (state: initialStateType = initState, action: ActionsType): typeof initState => {\r\n  switch (action.type) {\r\n    case \"REGISTRED\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    case \"SET-ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n\r\n    case \"TOGGLE_IS_FETCHING\":\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//actions\r\nexport const registredAC = (payload: SetRegisterUser) => ({ type: \"REGISTRED\", payload } as const);\r\nexport const setError = (error: string | null) => ({ type: \"SET-ERROR\", error } as const);\r\nexport const toggleIsFetching = (isFetching: boolean) =>\r\n  ({\r\n    type: \"TOGGLE_IS_FETCHING\",\r\n    isFetching,\r\n  } as const);\r\n\r\n//thunk\r\n\r\nexport const checkInThunk = (email: string, password: string) => (dispatch: Dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  API.checkIn(email, password)\r\n    .then((res) => {\r\n      dispatch(toggleIsFetching(false));\r\n      dispatch(registredAC({ email, password, isRegistred: true }));\r\n      console.log(res);\r\n    })\r\n    .catch((err) => {\r\n      dispatch(toggleIsFetching(false));\r\n      const error = err.response ? err.response.data.error : err.message + \"some error\";\r\n      dispatch(setError(error));\r\n    });\r\n};\r\n\r\n//types\r\ntype ActionsType = ReturnType<typeof registredAC> | ReturnType<typeof setError> | ReturnType<typeof toggleIsFetching>;\r\n\r\ntype initialStateType = typeof initState;\r\n\r\ntype SetRegisterUser = {\r\n  email: string;\r\n  password: string;\r\n  isRegistred: boolean;\r\n};\r\n","import s from \"./Preloader.module.css\";\r\n\r\nexport const Preloader = () => {\r\n  return (\r\n    <>\r\n      <div className={s.loading}>\r\n        <div className={s.loading_text}>\r\n          <span className={s.loading_text_words}>L</span>\r\n          <span className={s.loading_text_words}>O</span>\r\n          <span className={s.loading_text_words}>A</span>\r\n          <span className={s.loading_text_words}>D</span>\r\n          <span className={s.loading_text_words}>I</span>\r\n          <span className={s.loading_text_words}>N</span>\r\n          <span className={s.loading_text_words}>G</span>\r\n          <span className={s.loading_text_words}>.</span>\r\n          <span className={s.loading_text_words}>.</span>\r\n          <span className={s.loading_text_words}>.</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { ChangeEvent, useState } from \"react\";\r\nimport s from \"./Registred.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { checkInThunk } from \"../../bll/registredReduser\";\r\nimport { useCallback } from \"react\";\r\nimport { AppStoreType } from \"../../bll/store\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Preloader } from \"./../Preloader/Preloader\";\r\nimport {API} from \"../../api/api\";\r\n\r\nexport const Registred = () => {\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\r\n  const [errorEmailMessage, setErrorEmailMessage] = useState<string | null>(null);\r\n  const [errorPasswordMessage, setErrorPasswordMessage] = useState<string | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const setEmailHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n\r\n  const setEmailError = () => {\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{1,4}$/i.test(email)) {\r\n      setErrorEmailMessage(\"Invalid email address\");\r\n    } else {\r\n      setErrorEmailMessage(null);\r\n    }\r\n  };\r\n\r\n  const setPasswordHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const setPasswordError = () => {\r\n    if (password !== confirmPassword || password.length !== confirmPassword.length) {\r\n      setErrorPasswordMessage(\"Password mismatch\");\r\n    } else if (password.length < 7 || confirmPassword.length < 7) {\r\n      setErrorPasswordMessage(\"Password must be more than 7 characters...\");\r\n    } else {\r\n      setErrorPasswordMessage(null);\r\n    }\r\n  };\r\n\r\n  const setConfirmPassHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const error = useSelector<AppStoreType, string | null>((state) => state.register.error);\r\n  const isFetching = useSelector<AppStoreType, boolean>((state) => state.register.isFetching);\r\n\r\n  const onSubmitForm = useCallback(() => {\r\n    dispatch(checkInThunk(email, password));\r\n  }, [email, password]);\r\n\r\n\r\n  const isLoggedIn = useSelector<AppStoreType, boolean>((state) => state.register.isRegistred);\r\n  if (isLoggedIn) {\r\n    return <Redirect to={\"/login\"} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isFetching ? <Preloader /> : null}\r\n      <div className={s.container}>\r\n        <div className={s.form}>\r\n          <h3>Sing up</h3>\r\n          <input type='email' value={email} onChange={setEmailHandle} onBlur={setEmailError} placeholder={\"Email\"} />\r\n          {errorEmailMessage && <span className={s.error}>{errorEmailMessage}</span>}\r\n          <input type='password' value={password} onChange={setPasswordHandle} placeholder={\"Password\"} />\r\n          <input\r\n            type='password'\r\n            value={confirmPassword}\r\n            onChange={setConfirmPassHandle}\r\n            onBlur={setPasswordError}\r\n            placeholder={\"Confirm password\"}\r\n          />\r\n          {error && <span className={s.error}>{error}</span>}\r\n          {errorPasswordMessage && <span className={s.error}>{errorPasswordMessage}</span>}\r\n\r\n          <div className={s.btn_wrap}>\r\n            <button className={s.cancel_btn}>Cancel</button>\r\n            <button className={s.register_btn} onClick={onSubmitForm}>\r\n              Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { API } from \"../api/api\";\r\n\r\nconst initState = {\r\n    error: null as null | string,\r\n    isFetching: false,\r\n};\r\n\r\nexport const forgotReducer = (state: initialStateType = initState, action: ActionsType): typeof initState => {\r\n    switch (action.type) {\r\n        case \"SET-ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n\r\n        case \"TOGGLE_IS_FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//actions\r\n// export const forgotAC = (payload: SetRegisterUser) => ({ type: \"FORGOT\", payload } as const);\r\nexport const setError = (error: string | null) => ({ type: \"SET-ERROR\", error } as const);\r\nexport const toggleIsFetching = (isFetching: boolean) =>\r\n    ({\r\n        type: \"TOGGLE_IS_FETCHING\",\r\n        isFetching,\r\n    } as const);\r\n\r\n//thunk\r\n\r\nexport const forgotThunk = (email: string, from: string) => (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    API.forgot(email,from)\r\n        .then((res) => {\r\n            dispatch(toggleIsFetching(false));\r\n            // dispatch(forgotAC({ email,from}));\r\n            console.log(res);\r\n        })\r\n        .catch((err) => {\r\n            dispatch(toggleIsFetching(false));\r\n            const error = err.response ? err.response.data.error : err.message + \"some error\";\r\n            dispatch(setError(error));\r\n        });\r\n};\r\n\r\n//types\r\ntype ActionsType =  ReturnType<typeof setError> | ReturnType<typeof toggleIsFetching>;\r\n\r\ntype initialStateType = typeof initState;\r\n//\r\n// type SetRegisterUser = {\r\n//     email: string;\r\n//    from: string;\r\n//     // message: string\r\n// };\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {forgotThunk} from \"../../bll/forgotReduser\";\r\n\r\nexport const Forgot = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    // const  onSubmitForm = () => {\r\n    //     API.forgot(loginValue, emailValue).then(res => console.log(res))\r\n    // };\r\n\r\n    const [loginValue, setLoginValue]= useState('')\r\n    const [emailValue, setEmailValue]= useState('')\r\n    const onSubmitForm = useCallback(() => {\r\n        dispatch( forgotThunk(loginValue,emailValue));\r\n    }, [loginValue,emailValue]);\r\n\r\n\r\n    const setLoginHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLoginValue(e.currentTarget.value)\r\n    }\r\n\r\n    const setEmailHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmailValue(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p>It-incubator</p>\r\n            <p>Forgot your password?</p>\r\n            <input type='email'\r\n                   value={loginValue}\r\n                   onChange={setLoginHandle}\r\n                //onBlur={setEmailError}\r\n                   placeholder={\"login\"} />\r\n            <input type='email'\r\n                   value={emailValue}\r\n                   onChange={setEmailHandle}\r\n                //onBlur={setEmailError}\r\n                   placeholder={\"Email\"} />\r\n            <button onClick={onSubmitForm}>Send</button>\r\n                <p>Password: free</p>\r\n        </div>\r\n);\r\n\r\n}\r\n","import React from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Error404 from \"../404/Error404\";\r\nimport Login from \"../login/Login\";\r\nimport CheckIn from \"../CheckIn\";\r\nimport PasswordRecovery from \"../PasswordRecovery\";\r\nimport Profile from \"../Profile\";\r\nimport EnteringNewPassword from \"../EnteringNewPassword\";\r\nimport Testing from \"../Testing\";\r\nimport { Registred } from \"./../registred/Registred\";\r\nimport {Forgot} from \"../forgot/Forgot\";\r\n\r\nexport const PATH = {\r\n  LOGIN: \"/login\",\r\n  REGISTRED: \"/registred\",\r\n  CHECK_IN: \"/check-in\",\r\n  PROFILE: \"/profile\",\r\n  TESTING: \"/testing\",\r\n  PASSWORD_RECOVERY: \"/password-recovery\",\r\n  ENTERING_NEW_PASSWORD: \"/entering-new-password/:token\",\r\n    FORGOT:'/forgot'\r\n};\r\n\r\nfunction Routes() {\r\n  return (\r\n    /*   *Switch выбирает первый подходящий роут**/\r\n    <Switch>\r\n      {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n      {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n      <Route path={\"/\"} exact render={() => <Redirect to={PATH.LOGIN} />} />\r\n\r\n      <Route path={PATH.LOGIN} render={() => <Login />} />\r\n      <Route path={PATH.REGISTRED} render={() => <Registred />} />\r\n      <Route path={PATH.FORGOT} render={() => <Forgot />} />\r\n      <Route path={PATH.PROFILE} render={() => <Profile />} />\r\n      <Route path={PATH.TESTING} render={() => <Testing />} />\r\n      <Route path={PATH.PASSWORD_RECOVERY} render={() => <PasswordRecovery />} />\r\n      <Route path={PATH.ENTERING_NEW_PASSWORD} render={() => <EnteringNewPassword />} />\r\n\r\n      {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n      <Route render={() => <Error404 />} />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routes;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { PATH } from \"../routes/Routes.\";\r\nimport s from \"./Header.module.css\";\r\n\r\nfunction Header() {\r\n  // add NavLinks\r\n  const [activeMenu, setActiveMenu] = useState<boolean>(false);\r\n  const toggle = () => {\r\n    setActiveMenu(!activeMenu);\r\n  };\r\n\r\n  return (\r\n    <div className={s.menuWrapper}>\r\n      <div className={s.burgerMenu} onClick={toggle}>\r\n        &#9776;\r\n      </div>\r\n      <div className={`${s.containerMenuLinks} ${activeMenu && s.activeMenu}`}>\r\n        <NavLink to={PATH.LOGIN} className={s.link}>\r\n          login\r\n        </NavLink>\r\n        <NavLink to={PATH.REGISTRED} className={s.link}>\r\n          registred\r\n        </NavLink>\r\n        <NavLink to={PATH.FORGOT} className={s.link}>\r\n          forgot\r\n        </NavLink>\r\n        <NavLink to={PATH.PROFILE} className={s.link}>\r\n          profile\r\n        </NavLink>\r\n        <NavLink to={PATH.TESTING} className={s.link}>\r\n          testing\r\n        </NavLink>\r\n        <NavLink to={PATH.PASSWORD_RECOVERY} className={s.link}>\r\n          password-recovery\r\n        </NavLink>\r\n        <NavLink to={PATH.ENTERING_NEW_PASSWORD} className={s.link}>\r\n          entering-new-password\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport Routes from './components/routes/Routes.';\nimport Header from './components/header/Header';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        {/*в gh-pages лучше работает HashRouter*/}\n\n        <HashRouter>\n\n          <Header/>\n\n          <Routes/>\n\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { registredReducer } from \"./registredReduser\";\r\nimport {forgotReducer} from \"./forgotReduser\";\r\n\r\nconst reducers = combineReducers({\r\n  register: registredReducer,\r\n  forgot:forgotReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./bll/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {\" \"}\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}