{"version":3,"sources":["components/Preloader/Preloader.module.css","components/registred/Registred.module.css","components/login/login.module.css","components/common/Input/Input.module.css","components/common/checkbox/Checkbox.module.css","components/common/button/Button.module.css","components/404/404.module.css","components/404/cat404.png","components/404/Error404.tsx","components/common/Input/Input.tsx","components/common/checkbox/Checkbox.tsx","components/common/button/Button.tsx","components/Preloader/Preloader.tsx","api/api.tsx","bll/loginReducer.ts","components/login/Login.tsx","components/PasswordRecovery.tsx","components/Profile.tsx","components/EnteringNewPassword.tsx","components/Testing.tsx","bll/registredReduser.ts","components/registred/Registred.tsx","bll/forgotReduser.ts","components/forgot/Forgot.tsx","components/routes/Routes..tsx","components/header/Header.tsx","App.tsx","reportWebVitals.ts","bll/store.ts","index.tsx","components/header/Header.module.css"],"names":["module","exports","Error404","className","s","content","src","pages404","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","Preloader","loading","loading_text","loading_text_words","instance","axios","create","baseURL","withCredentials","API","email","password","rememberMe","post","from","message","initState","isLogined","isFetching","toggleIsFetching","Login","useState","setEmail","setPassword","setChecked","errorEmailMessage","setErrorEmailMessage","errorPasswordMessage","setErrorPasswordMessage","dispatch","useDispatch","useSelector","state","register","onClickHandler","useCallback","then","res","payload","console","log","catch","err","response","data","setError","onClickLoginThunk","isRegistred","to","container","form","placeholder","onBlur","test","length","btn_wrap","singlIn_btn","onClick","PasswordRecovery","Profile","EnteringNewPassword","token","useParams","path","render","match","Testing","blue","Registred","confirmPassword","setConfirmPassword","onSubmitForm","checkInThunk","cancel_btn","register_btn","Forgot","loginValue","setLoginValue","emailValue","setEmailValue","PATH","Routes","exact","Header","activeMenu","setActiveMenu","menuWrapper","burgerMenu","containerMenuLinks","link","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","forgot","login","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb082efe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Preloader_loading__3VHTA\",\"loading_text\":\"Preloader_loading_text__3gSeS\",\"blur-text\":\"Preloader_blur-text__3LMkc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Registred_container__QRrm2\",\"form\":\"Registred_form__2lhVl\",\"btn_wrap\":\"Registred_btn_wrap__xQEYv\",\"cancel_btn\":\"Registred_cancel_btn__3pLid\",\"register_btn\":\"Registred_register_btn__2tIWR\",\"error\":\"Registred_error__1sIRs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"login_container__1lFqL\",\"form\":\"login_form__3V1Kh\",\"btn_wrap\":\"login_btn_wrap__1euzM\",\"cancel_btn\":\"login_cancel_btn__2OcsY\",\"singlIn_btn\":\"login_singlIn_btn__3ODeI\",\"error\":\"login_error__1J9Xk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__3Dv7_\",\"errorInput\":\"Input_errorInput__3b_mW\",\"error\":\"Input_error__VpK1_\",\"input\":\"Input_input__3qVm_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__2IX8E\",\"spanClassName\":\"Checkbox_spanClassName__2PGdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2dlJv\",\"red\":\"Button_red__2WPVt\",\"button\":\"Button_button__1eCoJ\",\"blink\":\"Button_blink__1t9Ok\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"404_content__1PmPX\"};","export default __webpack_public_path__ + \"static/media/cat404.8fcdbb21.png\";","import React from 'react'\nimport pages404 from './cat404.png'\nimport s from './404.module.css'\n\nfunction Error404() {\n    return (\n         <div className={s.content}>\n             <div>404</div>\n             <div>Page not found!</div>\n             <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n             <img src={pages404}/>\n\n        </div>\n    )\n}\n\nexport default Error404","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './Input.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput: s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './Checkbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './Button.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import s from \"./Preloader.module.css\";\r\n\r\nexport const Preloader = () => {\r\n  return (\r\n    <>\r\n      <div className={s.loading}>\r\n        <div className={s.loading_text}>\r\n          <span className={s.loading_text_words}>L</span>\r\n          <span className={s.loading_text_words}>O</span>\r\n          <span className={s.loading_text_words}>A</span>\r\n          <span className={s.loading_text_words}>D</span>\r\n          <span className={s.loading_text_words}>I</span>\r\n          <span className={s.loading_text_words}>N</span>\r\n          <span className={s.loading_text_words}>G</span>\r\n          <span className={s.loading_text_words}>.</span>\r\n          <span className={s.loading_text_words}>.</span>\r\n          <span className={s.loading_text_words}>.</span>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:7542/2.0/\",\r\n  withCredentials: true,\r\n});\r\nconst message = `<div style=\"background-color: lime; padding: 15px\">\t\r\n\tpassword recovery link: \r\n\t<a href='http://localhost:3000/#/set-new-password/$token$'>\r\n\tlink</a></div>`\r\n// api\r\nexport const API = {\r\n  createLogin(email: string, password: string, rememberMe:boolean) {\r\n    const promise = instance.post<any>(\"auth/login\", {email, password, rememberMe});\r\n    return promise;\r\n  },\r\n\r\n  // logout() {\r\n  //   return instance.delete<ResponseType>('auth/login')\r\n  // },\r\n\r\n  checkIn(email: string, password: string) {\r\n    return instance.post(\"auth/register\", { email, password });\r\n  },\r\n  forgot(email: string, from: string) {\r\n    return instance.post(\"auth/forgot\",  {email, from, message} );\r\n  },\r\n  setNewPassword(password:string, \tresetPasswordToken: string\t) {\r\n    return instance.post(\"auth/set-new-password\",  {password,resetPasswordToken} );\r\n  },\r\n};\r\n\r\n","import {API} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nconst initState = {\r\n    email: \"\",\r\n    password: \"\",\r\n    isLogined: false,\r\n    error: null as null | string,\r\n    isFetching: false,\r\n}\r\n\r\nexport const loginReducer = (state: initialStateType = initState, action:LoginActionType): typeof initState => {\r\n    switch (action.type) {\r\n        case \"LOGIN\": {\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n            };\r\n        }\r\n        case \"SET-ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n\r\n        case \"TOGGLE_IS_FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            };\r\n        default: return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const loginAC = (payload: LoginUserType) => ({ type: \"LOGIN\", payload } as const);\r\nexport const setError = (error: string | null) => ({ type: \"SET-ERROR\", error } as const);\r\nexport const toggleIsFetching = (isFetching: boolean) =>\r\n    ({\r\n        type: \"TOGGLE_IS_FETCHING\",\r\n        isFetching,\r\n    } as const);\r\n\r\n\r\n//thunk\r\nexport const onClickLoginThunk = (email: string, password: string,\r\n                                  checked:boolean) => (dispatch: Dispatch) => {\r\n\r\n    dispatch(toggleIsFetching(true));\r\n    API.createLogin(email, password, false)\r\n        .then((res) => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(loginAC(<LoginUserType>{isLogined: true}));\r\n            console.log(res)\r\n        })\r\n        .catch((err) => {\r\n            dispatch(toggleIsFetching(false));\r\n            const error = err.response ? err.response.data.error : err.message + \"some error\";\r\n            dispatch(setError(error));\r\n        });\r\n}\r\n\r\n// export const logoutTC = (email: string, password: string,\r\n//                          checked:boolean) => (dispatch: Dispatch) => {\r\n//     dispatch(toggleIsFetching(true));\r\n//     API.logout()\r\n//         .then(res => {\r\n//             dispatch(toggleIsFetching(false));\r\n//             dispatch(loginAC(<LoginUserType>{isLogined: false}));\r\n//             console.log(res)\r\n//         })\r\n//         .catch((err) => {\r\n//             dispatch(toggleIsFetching(false));\r\n//             const error = err.response ? err.response.data.error : err.message + \"some error\";\r\n//             dispatch(setError(error));\r\n//         });\r\n// }\r\n\r\n//types\r\ntype LoginActionType =ReturnType<typeof loginAC> | ReturnType<typeof setError> | ReturnType<typeof toggleIsFetching>;\r\n\r\ntype initialStateType = typeof initState;\r\n\r\ntype LoginUserType={\r\n    email:string,\r\n    password:string,\r\n    checked:boolean,\r\n    isLogined: boolean\r\n}\r\n\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport SuperInputText from \"../common/Input/Input\";\r\nimport SuperCheckbox from \"../common/checkbox/Checkbox\";\r\nimport SuperButton from \"../common/button/Button\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Preloader} from \"../Preloader/Preloader\";\r\nimport s from \"./login.module.css\";\r\nimport {onClickLoginThunk} from \"../../bll/loginReducer\";\r\n\r\nexport const Login = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [checked, setChecked] = useState(false)\r\n    const [errorEmailMessage, setErrorEmailMessage] = useState<string | null>(null);\r\n    const [errorPasswordMessage, setErrorPasswordMessage] = useState<string | null>(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n\r\n\r\n    const setEmailError = () => {\r\n        if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{1,4}$/i.test(email)) {\r\n            setErrorEmailMessage(\"Invalid email address\");\r\n        } else {\r\n            setErrorEmailMessage(null);\r\n        }\r\n    };\r\n\r\n\r\n    const setPasswordError = () => {\r\n        if (password !== password || password.length !== password.length) {\r\n            setErrorPasswordMessage(\"Password mismatch\");\r\n        } else if (password.length < 7 || password.length < 7) {\r\n            setErrorPasswordMessage(\"Password must be more than 7 characters...\");\r\n        } else {\r\n            setErrorPasswordMessage(null);\r\n        }\r\n    };\r\n\r\n\r\n    const error = useSelector<AppStoreType, string | null>((state) => state.register.error);\r\n    const isFetching = useSelector<AppStoreType, boolean>((state) => state.register.isFetching);\r\n\r\n    const onClickHandler = useCallback(() => {\r\n        dispatch(onClickLoginThunk(email, password, checked));\r\n    }, [email, password, checked]);\r\n\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>((state) => state.register.isRegistred);\r\n    if (isLoggedIn) {\r\n        return <Redirect to={\"/Profile\"}/>;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {isFetching ? <Preloader/> : null}\r\n            <div className={s.container}>\r\n                <div className={s.form}>\r\n                    <SuperInputText\r\n                        type='email'\r\n                        value={email}\r\n                        placeholder={\"email\"}\r\n                        onChangeText={setEmail}\r\n                        onBlur={setEmailError}/>\r\n                    {errorEmailMessage && <span className={s.error}>{errorEmailMessage}</span>}\r\n\r\n                    <SuperInputText\r\n                        type='password'\r\n                        value={password}\r\n                        placeholder={\"password\"}\r\n                        onBlur={setPasswordError}\r\n                        onChangeText={setPassword}/>\r\n                    {error && <span className={s.error}>{error}</span>}\r\n                    {errorPasswordMessage && <span className={s.error}>{errorPasswordMessage}</span>}\r\n\r\n                    <SuperCheckbox checked={checked}\r\n                                   onChangeChecked={setChecked}/>\r\n                     <div className={s.btn_wrap}>\r\n                    <SuperButton className={s.singlIn_btn}\r\n                        onClick={onClickHandler}>Sign in</SuperButton>\r\n                     </div>\r\n            </div>\r\n            </div>\r\n        </>);\r\n}\r\n\r\n\r\n","import React from \"react\";\n\nfunction PasswordRecovery() {\n    return (\n        <div>\n            PasswordRecovery\n        </div>\n    );\n}\n\nexport default PasswordRecovery;\n","import React, {useState} from \"react\";\nimport SuperInputText from \"./common/Input/Input\";\nimport s from './header/Header.module.css'\nimport SuperCheckbox from \"./common/checkbox/Checkbox\";\nimport SuperButton from \"./common/button/Button\";\n\n\n\nfunction Profile() {\n    const [checked, setChecked] = useState<boolean>(false)\n    return (\n        <div>\n            Profile\n        </div>\n\n    );\n}\n\nexport default Profile;\n","import React from \"react\";\r\nimport {Route, useParams} from \"react-router-dom\";\r\n\r\nfunction EnteringNewPassword() {\r\n\r\n    let { token } = useParams<{token: string}>();\r\n    console.log(token);\r\n    return (\r\n        <Route\r\n            path=\"/entering-new-password/:token\"\r\n            render={({ match }) => {\r\n                // Do whatever you want with the match...\r\n                return <div />;\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nexport default EnteringNewPassword;\r\n","import React, {useState} from \"react\";\nimport SuperInputText from \"./common/Input/Input\";\nimport s from './header/Header.module.css'\nimport SuperCheckbox from \"./common/checkbox/Checkbox\";\nimport SuperButton from \"./common/button/Button\";\n\n\n\nfunction Testing() {\n    const [checked, setChecked] = useState<boolean>(false)\n    return (\n        <div>\n            <SuperInputText\n                className={s.blue}\n            />\n            <div>\n                <SuperCheckbox   checked={checked}\n                                 onChangeChecked={setChecked}/>\n            </div>\n            <div>\n                <SuperButton>\n                   click\n                </SuperButton>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Testing;\n","import { Dispatch } from \"redux\";\r\nimport { API } from \"../api/api\";\r\n\r\nconst initState = {\r\n  email: \"\",\r\n  password: \"\",\r\n  isRegistred: false,\r\n  error: null as null | string,\r\n  isFetching: false,\r\n};\r\n\r\nexport const registredReducer = (state: initialStateType = initState, action: ActionsType): typeof initState => {\r\n  switch (action.type) {\r\n    case \"REGISTRED\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    }\r\n    case \"SET-ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n\r\n    case \"TOGGLE_IS_FETCHING\":\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//actions\r\nexport const registredAC = (payload: SetRegisterUser) => ({ type: \"REGISTRED\", payload } as const);\r\nexport const setError = (error: string | null) => ({ type: \"SET-ERROR\", error } as const);\r\nexport const toggleIsFetching = (isFetching: boolean) =>\r\n  ({\r\n    type: \"TOGGLE_IS_FETCHING\",\r\n    isFetching,\r\n  } as const);\r\n\r\n//thunk\r\n\r\nexport const checkInThunk = (email: string, password: string) => (dispatch: Dispatch) => {\r\n  dispatch(toggleIsFetching(true));\r\n  API.checkIn(email, password)\r\n    .then((res) => {\r\n      dispatch(toggleIsFetching(false));\r\n      dispatch(registredAC({ email, password, isRegistred: true }));\r\n      console.log(res);\r\n    })\r\n    .catch((err) => {\r\n      dispatch(toggleIsFetching(false));\r\n      const error = err.response ? err.response.data.error : err.message + \"some error\";\r\n      dispatch(setError(error));\r\n    });\r\n};\r\n\r\n//types\r\ntype ActionsType = ReturnType<typeof registredAC> | ReturnType<typeof setError> | ReturnType<typeof toggleIsFetching>;\r\n\r\ntype initialStateType = typeof initState;\r\n\r\ntype SetRegisterUser = {\r\n  email: string;\r\n  password: string;\r\n  isRegistred: boolean;\r\n};\r\n","import { ChangeEvent, useState } from \"react\";\r\nimport s from \"./Registred.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { checkInThunk } from \"../../bll/registredReduser\";\r\nimport { useCallback } from \"react\";\r\nimport { AppStoreType } from \"../../bll/store\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Preloader } from \"./../Preloader/Preloader\";\r\nimport {API} from \"../../api/api\";\r\n\r\nexport const Registred = () => {\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\r\n  const [errorEmailMessage, setErrorEmailMessage] = useState<string | null>(null);\r\n  const [errorPasswordMessage, setErrorPasswordMessage] = useState<string | null>(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const setEmailHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setEmail(e.currentTarget.value);\r\n  };\r\n\r\n  const setEmailError = () => {\r\n    if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{1,4}$/i.test(email)) {\r\n      setErrorEmailMessage(\"Invalid email address\");\r\n    } else {\r\n      setErrorEmailMessage(null);\r\n    }\r\n  };\r\n\r\n  const setPasswordHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const setPasswordError = () => {\r\n    if (password !== confirmPassword || password.length !== confirmPassword.length) {\r\n      setErrorPasswordMessage(\"Password mismatch\");\r\n    } else if (password.length < 7 || confirmPassword.length < 7) {\r\n      setErrorPasswordMessage(\"Password must be more than 7 characters...\");\r\n    } else {\r\n      setErrorPasswordMessage(null);\r\n    }\r\n  };\r\n\r\n  const setConfirmPassHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setConfirmPassword(e.currentTarget.value);\r\n  };\r\n\r\n  const error = useSelector<AppStoreType, string | null>((state) => state.register.error);\r\n  const isFetching = useSelector<AppStoreType, boolean>((state) => state.register.isFetching);\r\n\r\n  const onSubmitForm = useCallback(() => {\r\n    dispatch(checkInThunk(email, password));\r\n  }, [email, password]);\r\n\r\n\r\n  const isLoggedIn = useSelector<AppStoreType, boolean>((state) => state.register.isRegistred);\r\n  if (isLoggedIn) {\r\n    return <Redirect to={\"/login\"} />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isFetching ? <Preloader /> : null}\r\n      <div className={s.container}>\r\n        <div className={s.form}>\r\n          <h3>Sing up</h3>\r\n          <input type='email' value={email} onChange={setEmailHandle} onBlur={setEmailError} placeholder={\"Email\"} />\r\n          {errorEmailMessage && <span className={s.error}>{errorEmailMessage}</span>}\r\n          <input type='password' value={password} onChange={setPasswordHandle} placeholder={\"Password\"} />\r\n          <input\r\n            type='password'\r\n            value={confirmPassword}\r\n            onChange={setConfirmPassHandle}\r\n            onBlur={setPasswordError}\r\n            placeholder={\"Confirm password\"}\r\n          />\r\n          {error && <span className={s.error}>{error}</span>}\r\n          {errorPasswordMessage && <span className={s.error}>{errorPasswordMessage}</span>}\r\n\r\n          <div className={s.btn_wrap}>\r\n            <button className={s.cancel_btn}>Cancel</button>\r\n            <button className={s.register_btn} onClick={onSubmitForm}>\r\n              Register\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { Dispatch } from \"redux\";\r\nimport { API } from \"../api/api\";\r\n\r\nconst initState = {\r\n    error: null as null | string,\r\n    isFetching: false,\r\n};\r\n\r\nexport const forgotReducer = (state: initialStateType = initState, action: ActionsType): typeof initState => {\r\n    switch (action.type) {\r\n        case \"SET-ERROR\":\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n            };\r\n\r\n        case \"TOGGLE_IS_FETCHING\":\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//actions\r\n// export const forgotAC = (payload: SetRegisterUser) => ({ type: \"FORGOT\", payload } as const);\r\nexport const setError = (error: string | null) => ({ type: \"SET-ERROR\", error } as const);\r\nexport const toggleIsFetching = (isFetching: boolean) =>\r\n    ({\r\n        type: \"TOGGLE_IS_FETCHING\",\r\n        isFetching,\r\n    } as const);\r\n\r\n//thunk\r\n\r\nexport const forgotThunk = (email: string, from: string) => (dispatch: Dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    API.forgot(email,from)\r\n        .then((res) => {\r\n            dispatch(toggleIsFetching(false));\r\n            // dispatch(forgotAC({ email,from}));\r\n            console.log(res);\r\n        })\r\n        .catch((err) => {\r\n            dispatch(toggleIsFetching(false));\r\n            const error = err.response ? err.response.data.error : err.message + \"some error\";\r\n            dispatch(setError(error));\r\n        });\r\n};\r\n\r\n//types\r\ntype ActionsType =  ReturnType<typeof setError> | ReturnType<typeof toggleIsFetching>;\r\n\r\ntype initialStateType = typeof initState;\r\n//\r\n// type SetRegisterUser = {\r\n//     email: string;\r\n//    from: string;\r\n//     // message: string\r\n// };\r\n","import React, {ChangeEvent, useCallback, useState} from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {forgotThunk} from \"../../bll/forgotReduser\";\r\n\r\nexport const Forgot = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    // const  onSubmitForm = () => {\r\n    //     API.forgot(loginValue, emailValue).then(res => console.log(res))\r\n    // };\r\n\r\n    const [loginValue, setLoginValue]= useState('')\r\n    const [emailValue, setEmailValue]= useState('')\r\n    const onSubmitForm = useCallback(() => {\r\n        dispatch( forgotThunk(loginValue,emailValue));\r\n    }, [loginValue,emailValue]);\r\n\r\n\r\n    const setLoginHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLoginValue(e.currentTarget.value)\r\n    }\r\n\r\n    const setEmailHandle = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmailValue(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p>It-incubator</p>\r\n            <p>Forgot your password?</p>\r\n            <input type='email'\r\n                   value={loginValue}\r\n                   onChange={setLoginHandle}\r\n                //onBlur={setEmailError}\r\n                   placeholder={\"login\"} />\r\n            <input type='email'\r\n                   value={emailValue}\r\n                   onChange={setEmailHandle}\r\n                //onBlur={setEmailError}\r\n                   placeholder={\"Email\"} />\r\n            <button onClick={onSubmitForm}>Send</button>\r\n                <p>Password: free</p>\r\n        </div>\r\n);\r\n\r\n}\r\n","import React from \"react\";\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport Error404 from \"../404/Error404\";\r\nimport {Login} from \"../login/Login\";\r\nimport CheckIn from \"../CheckIn\";\r\nimport PasswordRecovery from \"../PasswordRecovery\";\r\nimport Profile from \"../Profile\";\r\nimport EnteringNewPassword from \"../EnteringNewPassword\";\r\nimport Testing from \"../Testing\";\r\nimport {Registred} from \"./../registred/Registred\";\r\nimport {Forgot} from \"../forgot/Forgot\";\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    REGISTRED: \"/registred\",\r\n    CHECK_IN: \"/check-in\",\r\n    PROFILE: \"/profile\",\r\n    TESTING: \"/testing\",\r\n    PASSWORD_RECOVERY: \"/password-recovery\",\r\n    ENTERING_NEW_PASSWORD: \"/entering-new-password/:token\",\r\n    FORGOT: '/forgot'\r\n};\r\n\r\nfunction Routes() {\r\n    return (\r\n        /*   *Switch выбирает первый подходящий роут**/\r\n        <Switch>\r\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\r\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\r\n            <Route path={\"/\"} exact render={() => <Redirect to={PATH.LOGIN}/>}/>\r\n\r\n            <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n            <Route path={PATH.REGISTRED} render={() => <Registred/>}/>\r\n            <Route path={PATH.FORGOT} render={() => <Forgot/>}/>\r\n            <Route path={PATH.PROFILE} render={() => <Profile/>}/>\r\n            <Route path={PATH.TESTING} render={() => <Testing/>}/>\r\n            <Route path={PATH.PASSWORD_RECOVERY} render={() => <PasswordRecovery/>}/>\r\n            <Route path={PATH.ENTERING_NEW_PASSWORD} render={() => <EnteringNewPassword/>}/>\r\n\r\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n            <Route render={() => <Error404/>}/>\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n","import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { PATH } from \"../routes/Routes.\";\r\nimport s from \"./Header.module.css\";\r\n\r\nfunction Header() {\r\n  // add NavLinks\r\n  const [activeMenu, setActiveMenu] = useState<boolean>(false);\r\n  const toggle = () => {\r\n    setActiveMenu(!activeMenu);\r\n  };\r\n\r\n  return (\r\n    <div className={s.menuWrapper}>\r\n      <div className={s.burgerMenu} onClick={toggle}>\r\n        &#9776;\r\n      </div>\r\n      <div className={`${s.containerMenuLinks} ${activeMenu && s.activeMenu}`}>\r\n        <NavLink to={PATH.LOGIN} className={s.link}>\r\n          login\r\n        </NavLink>\r\n        <NavLink to={PATH.REGISTRED} className={s.link}>\r\n          registred\r\n        </NavLink>\r\n        <NavLink to={PATH.FORGOT} className={s.link}>\r\n          forgot\r\n        </NavLink>\r\n        <NavLink to={PATH.PROFILE} className={s.link}>\r\n          profile\r\n        </NavLink>\r\n        <NavLink to={PATH.TESTING} className={s.link}>\r\n          testing\r\n        </NavLink>\r\n        <NavLink to={PATH.PASSWORD_RECOVERY} className={s.link}>\r\n          password-recovery\r\n        </NavLink>\r\n        <NavLink to={PATH.ENTERING_NEW_PASSWORD} className={s.link}>\r\n          entering-new-password\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport Routes from './components/routes/Routes.';\nimport Header from './components/header/Header';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        {/*в gh-pages лучше работает HashRouter*/}\n\n        <HashRouter>\n\n          <Header/>\n\n          <Routes/>\n\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport { combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { registredReducer } from \"./registredReduser\";\r\nimport {forgotReducer} from \"./forgotReduser\";\r\nimport {loginReducer} from \"./loginReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  register: registredReducer,\r\n  forgot:forgotReducer,\r\n  login: loginReducer\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./bll/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {\" \"}\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__2Vmwu\",\"header\":\"Header_header__1Xwyi\",\"blue\":\"Header_blue__2u6ZM\",\"menuWrapper\":\"Header_menuWrapper__29xMj\",\"burgerMenu\":\"Header_burgerMenu__3nzj-\",\"containerMenuLinks\":\"Header_containerMenuLinks__2tkqZ\",\"activeMenu\":\"Header_activeMenu__iqZdg\",\"menuLinks\":\"Header_menuLinks__2vQzs\",\"active\":\"Header_active__AS62N\"};"],"sourceRoot":""}