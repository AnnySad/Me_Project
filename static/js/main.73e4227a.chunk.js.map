{"version":3,"sources":["components/Input/Input.module.css","components/checkbox/Checkbox.module.css","components/button/Button.module.css","components/Error404.tsx","components/Login.tsx","components/CheckIn.tsx","components/PasswordRecovery.tsx","components/Input/Input.tsx","components/checkbox/Checkbox.tsx","components/button/Button.tsx","components/Profile.tsx","components/EnteringNewPassword.tsx","components/Routes..tsx","components/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/Header.module.css"],"names":["module","exports","Error404","Login","CheckIn","PasswordRecovery","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","Profile","useState","setChecked","blue","EnteringNewPassword","PATH","Routes","path","exact","render","to","Header","activeMenu","setActiveMenu","menuWrapper","burgerMenu","onClick","containerMenuLinks","link","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"0FACAA,EAAOC,QAAU,CAAC,WAAa,0BAA0B,WAAa,0BAA0B,MAAQ,qBAAqB,MAAQ,uB,mBCArID,EAAOC,QAAU,CAAC,SAAW,2BAA2B,cAAgB,kC,mBCAxED,EAAOC,QAAU,CAAC,QAAU,wBAAwB,IAAM,oBAAoB,OAAS,uBAAuB,MAAQ,wB,yJCYvGC,MAXf,WACI,OACK,gCACI,sCACA,kDACA,uFCGEC,MARf,WACI,OACI,yCCMOC,MARf,WACI,OACI,2CCMOC,MARf,WACI,OACI,oD,yCCsDOC,EA3C2C,SAAC,GAUtD,EARGC,KAQF,IAPEC,EAOH,EAPGA,SAAUC,EAOb,EAPaA,aACVC,EAMH,EANGA,WAAYC,EAMf,EANeA,QACZC,EAKH,EALGA,MACAC,EAIH,EAJGA,UAAWC,EAId,EAJcA,cAERC,EAEN,6GAeKC,EAAkB,UAAMC,IAAEL,MAAR,YAAiBE,GAAgC,IACnEI,EAAmB,UAAMD,IAAEE,MAAR,YAAiBP,EAAQK,IAAEG,WAAYH,IAAEI,WAAzC,YAAuDR,GAEhF,OACI,qCACI,mCACIN,KAAM,OACNC,SArBa,SAACc,GACtBd,GACGA,EAASc,GAEZb,GAAgBA,EAAaa,EAAEC,cAAcC,QAkBrCd,WAhBe,SAACY,GACxBZ,GAAcA,EAAWY,GAEzBX,GACa,UAAVW,EAAEG,KACFd,KAYKE,UAAWK,GAEPH,IAEPH,GAAS,sBAAMC,UAAWG,EAAjB,SAAsCJ,Q,iCCV7Cc,EAhCyC,SAAC,GASpD,EAPGnB,KAOF,IANEC,EAMH,EANGA,SAAUmB,EAMb,EANaA,gBACVd,EAKH,EALGA,UACAe,GAIH,EALcd,cAKd,EAJGc,UAEGb,EAEN,4FAOKG,EAAmB,UAAMD,IAAEY,SAAR,YAAoBhB,GAAwB,IAErE,OACI,kCACI,mCACIN,KAAM,WACNC,SAZa,SAACc,GACtBd,GAAYA,EAASc,GACrBK,GAAmBA,EAAgBL,EAAEC,cAAcO,UAW3CjB,UAAWK,GAEPH,IAEPa,GAAY,sBAAMf,UAAWI,IAAEH,cAAnB,SAAmCc,Q,iBCZ7CG,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKnB,EAGR,EAHQA,UACFE,EAEN,mCACKkB,EAAc,UAAMD,EAAMf,IAAEe,IAAMf,IAAEiB,QAAtB,YAAiCrB,GAErD,OACI,oCACIA,UAAWoB,GACPlB,KCQDoB,MArBf,WAAoB,IAAD,EACeC,oBAAkB,GADjC,mBACRN,EADQ,KACCO,EADD,KAEf,OACI,gCACI,cAAC,EAAD,CACIxB,UAAWI,IAAEqB,OAEjB,8BACI,cAAC,EAAD,CAAiBR,QAASA,EACTH,gBAAiBU,MAEtC,8BACI,cAAC,EAAD,0BCVDE,MARf,WACI,OACI,uDCKKC,EACF,SADEA,EAEC,YAFDA,EAGA,WAHAA,EAIS,qBAJTA,EAKa,yBA2BXC,MAxBf,WACI,OACI,8BAEI,eAAC,IAAD,WAII,cAAC,IAAD,CAAOC,KAAM,IAAKC,OAAK,EAACC,OAAQ,kBAAM,cAAC,IAAD,CAAUC,GAAIL,OAEpD,cAAC,IAAD,CAAOE,KAAMF,EAAaI,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAOF,KAAMF,EAAgBI,OAAQ,kBAAM,cAAC,EAAD,OAC3C,cAAC,IAAD,CAAOF,KAAMF,EAAeI,OAAQ,kBAAM,cAAC,EAAD,OAC1C,cAAC,IAAD,CAAOF,KAAMF,EAA0BI,OAAQ,kBAAM,cAAC,EAAD,OACrD,cAAC,IAAD,CAAOF,KAAMF,EAA6BI,OAAQ,kBAAM,cAAC,EAAD,OAGxD,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,EAAD,aCPtBE,MArBf,WAAkB,MAEsBV,oBAAkB,GAFxC,mBAEPW,EAFO,KAEKC,EAFL,KAOd,OACI,sBAAKnC,UAAWI,IAAEgC,YAAlB,UACI,qBAAKpC,UAAWI,IAAEiC,WAAYC,QANvB,WACXH,GAAeD,IAKX,oBACA,sBAAKlC,UAAS,UAAKI,IAAEmC,mBAAP,YAA6BL,GAAc9B,IAAE8B,YAA3D,UACG,cAAC,IAAD,CAASF,GAAIL,EAAY3B,UAAWI,IAAEoC,KAAtC,mBACH,cAAC,IAAD,CAASR,GAAIL,EAAe3B,UAAWI,IAAEoC,KAAzC,sBACA,cAAC,IAAD,CAASR,GAAIL,EAAc3B,UAAWI,IAAEoC,KAAxC,qBACA,cAAC,IAAD,CAASR,GAAIL,EAAwB3B,UAAWI,IAAEoC,KAAlD,+BACA,cAAC,IAAD,CAASR,GAAIL,EAA4B3B,UAAWI,IAAEoC,KAAtD,0CCCGC,MAhBf,WACE,OACI,qBAAKzC,UAAU,MAAf,SAGE,eAAC,IAAD,WAEE,cAAC,EAAD,IAEA,cAAC,EAAD,UCDK0C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASpB,OACP,cAAC,IAAMqB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K,kBCfAvD,EAAOC,QAAU,CAAC,KAAO,qBAAqB,OAAS,uBAAuB,KAAO,qBAAqB,YAAc,4BAA4B,WAAa,2BAA2B,mBAAqB,mCAAmC,WAAa,2BAA2B,UAAY,0BAA0B,OAAS,0B","file":"static/js/main.73e4227a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"Input_superInput__G3A1J\",\"errorInput\":\"Input_errorInput__fBHzp\",\"error\":\"Input_error__2HYec\",\"input\":\"Input_input__1y8M5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"Checkbox_checkbox__jujru\",\"spanClassName\":\"Checkbox_spanClassName__2t1yF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__2Ue5X\",\"red\":\"Button_red__2Ap5-\",\"button\":\"Button_button__2wQgV\",\"blink\":\"Button_blink__3AWt1\"};","import React from 'react'\n\nfunction Error404() {\n    return (\n         <div>\n             <div>404</div>\n             <div>Page not found!</div>\n             <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\n\n        </div>\n    )\n}\n\nexport default Error404","import React from \"react\";\n\nfunction Login() {\n    return (\n        <div>\n            Login\n        </div>\n    );\n}\n\nexport default Login;\n","import React from \"react\";\n\nfunction CheckIn() {\n    return (\n        <div>\n            CheckIn\n        </div>\n    );\n}\n\nexport default CheckIn;\n","import React from \"react\";\n\nfunction PasswordRecovery() {\n    return (\n        <div>\n            PasswordRecovery\n        </div>\n    );\n}\n\nexport default PasswordRecovery;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './Input.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${error ? s.errorInput: s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './Checkbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './Button.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {useState} from \"react\";\nimport SuperInputText from \"./Input/Input\";\nimport s from './Header.module.css'\nimport SuperCheckbox from \"./checkbox/Checkbox\";\nimport SuperButton from \"./button/Button\";\n\n\n\nfunction Profile() {\n    const [checked, setChecked] = useState<boolean>(false)\n    return (\n        <div>\n            <SuperInputText\n                className={s.blue}\n            />\n            <div>\n                <SuperCheckbox   checked={checked}\n                                 onChangeChecked={setChecked}/>\n            </div>\n            <div>\n                <SuperButton>\n                   click\n                </SuperButton>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Profile;\n","import React from \"react\";\n\nfunction EnteringNewPassword() {\n    return (\n        <div>\n            EnteringNewPassword\n        </div>\n    );\n}\n\nexport default EnteringNewPassword;\n","import React from \"react\";\nimport {Redirect, Route, Switch } from \"react-router-dom\";\nimport Error404 from \"./Error404\";\nimport Login from \"./Login\";\nimport CheckIn from \"./CheckIn\";\nimport PasswordRecovery from \"./PasswordRecovery\";\nimport Profile from \"./Profile\";\nimport EnteringNewPassword from \"./EnteringNewPassword\";\n\nexport const PATH = {\n    LOGIN: '/login',\n    CHECK_IN: '/check-in',\n    PROFILE: '/profile',\n    PASSWORD_RECOVERY:'/password-recovery',\n    ENTERING_NEW_PASSWORD:'/entering-new-password'\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n                {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n                {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n                <Route path={'/'} exact render={() => <Redirect to={PATH. LOGIN}/>}/>\n\n                <Route path={PATH. LOGIN} render={() => <Login/>}/>\n                <Route path={PATH. CHECK_IN} render={() => <CheckIn/>}/>\n                <Route path={PATH. PROFILE} render={() => <Profile/>}/>\n                <Route path={PATH.  PASSWORD_RECOVERY} render={() => <PasswordRecovery/>}/>\n                <Route path={PATH. ENTERING_NEW_PASSWORD} render={() => <EnteringNewPassword/>}/>\n\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n                <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    )\n}\n\nexport default Routes\n","import React, {useState} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {PATH} from \"./Routes.\";\nimport s from './Header.module.css'\n\n\nfunction Header() {\n    // add NavLinks\n    const [activeMenu, setActiveMenu] = useState<boolean>(false);\n    const toggle = () => {\n        setActiveMenu(!activeMenu)\n    }\n\n    return (\n        <div className={s.menuWrapper}>\n            <div className={s.burgerMenu} onClick={toggle}>&#9776;</div>\n            <div className={`${s.containerMenuLinks} ${activeMenu && s.activeMenu}`}>\n               <NavLink to={PATH.LOGIN} className={s.link}>login</NavLink>\n            <NavLink to={PATH.CHECK_IN} className={s.link}>check-in</NavLink>\n            <NavLink to={PATH.PROFILE} className={s.link}>profile</NavLink>\n            <NavLink to={PATH.PASSWORD_RECOVERY} className={s.link}>password-recovery</NavLink>\n            <NavLink to={PATH.ENTERING_NEW_PASSWORD} className={s.link}>entering-new-password</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport Routes from './components/Routes.';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n      <div className=\"App\">\n        {/*в gh-pages лучше работает HashRouter*/}\n\n        <HashRouter>\n\n          <Header/>\n\n          <Routes/>\n\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Header_link__1VBkk\",\"header\":\"Header_header__1z39j\",\"blue\":\"Header_blue__3mhet\",\"menuWrapper\":\"Header_menuWrapper__1cgsW\",\"burgerMenu\":\"Header_burgerMenu__2LGgB\",\"containerMenuLinks\":\"Header_containerMenuLinks__3gB6P\",\"activeMenu\":\"Header_activeMenu__1znRG\",\"menuLinks\":\"Header_menuLinks__3rnw1\",\"active\":\"Header_active__2tGKS\"};"],"sourceRoot":""}